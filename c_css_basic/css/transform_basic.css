@charset "UTF-8"; /* 굳이 안써도됨, html에서 이미 썼기 때문(혹시 모를 경우를 대비해서 적는다) */
/* transform_basic.css */

#contentBox{width:800px; width:50rem; height:auto; min-height:500px; min-height:31.25rem;}
.box{width:100%; height:auto; min-height:100%; background-color:#fd5; padding:16px; padding:1rem;
     box-sizing:border-box; border-bottom:2px solid #333; border-bottom:0.125rem solid #333;}
.box>ul{width:100%; height:auto;}
.box>ul:after{content:" "; display:block; width:0; height:0; clear:both;}
.box>ul>li{float:left; width:300px; height:300px; width:18.75rem; height:18.75rem; margin:40px; background-color:#07f; border-radius:1rem; color:#fff; font-weight:bold;}
/* transform-translate 위치이동 ================================================================= */

.translate li{transition:all 300ms ease;}
.translate:hover li{transition:all 1000ms ease;}

.translate:hover li:nth-child(1){transform:translate(400px, -200px); background-color:#aca;}  /* z-index가 안됨 */
.translate:hover li:nth-child(2){transform:translateX(400px); background-color:#fbc;} 
.translate:hover li:nth-child(3){transform:translateY(-100px); background-color:#cfc;} 
.translate:hover li:nth-child(4){transform:translate3D(-500px, -200px -100px); background-color:#705;} /* z-index와 개념이 같다 */

/* scale : 크기 조절 ======================================================================== */
.scale li{transition:all 500ms linear;}
/* linear 지속적인 - 동일한 속도 ,
ease 자연스러움(빨라지다 느리게) ease-in 점점빠르게, ease-out 점점느리게, ease-in-out 빨라지다 느리게 */

.scale:hover li:nth-child(1){transform:scale(1.2, 1.5); background-color:#aca;}
.scale:hover li:nth-child(2){transform:scaleX(0.5); background-color:#aca;}
.scale:hover li:nth-child(3){transform:scaleY(0.5); background-color:#aca;}
.scale:hover li:nth-child(4){transform:scale3D(1,2); background-color:#1ff;}

/* rotate :  ======================================================================== */
.rotate li{transform:all 700ms linear;}

.rotate:hover li:nth-child(1){transform:rotate(45deg);}
.rotate:hover li:nth-child(2){transform:perspective(500px) rotateX(45deg);}
.rotate:hover li:nth-child(3){transform:perspective(500px) rotateY(45deg);}
.rotate:hover li:nth-child(4){transform:rotate3D(1,2,2,45deg);}

/* skew ============================================================================= */

.skew li:nth-child(1){transform:skew(45deg, 15deg);}
.skew li:nth-child(2){transform:skewX(45deg);}
.skew li:nth-child(3){transform:skewY(15deg);}
.skew li:nth-child(4){transform:skewX(-45deg); background-color:#f30;}
.skew li:nth-child(4) span {transform:skewX(45deg); display:block;}

/* origin 형태를 변형할 때 기준점을 잡아주는 역할 =========================================================================== */
.origin{background-color:#dfd;}
.origin li{transition:all 500ms ease;}
.origin li:nth-child(1){transform-origin:0 0;}
.origin li:nth-child(1):hover{transform:skew(20deg) rotate(45deg);}
.origin li:nth-child(2):hover{transform:translate(500px, 400px) rotate(45deg) scale(0.5);}

/* perspective */
.perspective {margin-bottom:100rem;}
.perspective ul > li{width:100px; height:170px; background-color:#0ac;}
.perspective ul{perspective:20px;}
.perspective li:nth-child(1){transform:rotateY(60deg);}
.perspective li:nth-child(2){transform:rotateY(30deg);}
.perspective li:nth-child(3){transform:rotateY(-30deg);}
.perspective li:nth-child(4){transform:rotateY(-60deg);}